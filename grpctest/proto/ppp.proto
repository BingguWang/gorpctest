//proto文件用于创建gRPC服务，可以转成go文件

syntax = "proto3";  // 指定语法格式，注意 proto3 不再支持 proto2 的 required 和 optional

package  grpctest;      // 指定生成的ppp.pb.go 的包名，防止命名冲突，也就是生成的go文件的package

option go_package = "./proto"; //golang包名

// message 对应生成代码的 struct,message名必须全部使用驼峰命名规则

// 定义客户端请求的数据格式
message  Request {
// [修饰符] 类型 字段名 = 标识符;
  string  name = 1;
}

// 定义服务端响应的数据格式
message  Response {
  int32  uid = 1;
  string  user_name = 2;//字段命名采用小写字母加下划线分隔方式
  string  job = 3;
  repeated  string  goodAt = 4;  // repeated 修饰符表示字段是可变数组，即 slice 类型
}
// Enums类型名采用驼峰命名方式，字段命名采用大写字母加下划线分隔方式


// service 定义开放调用的服务，会对应生成两个接口，一个client客户端接口，一个server服务端接口，
// 服务端的接口没实现，但是客户端的接口已经实现了，可直接用ClientConn对象调用
service  ProgrammerService {
    // rpc 定义服务内的 GetProgrammerInfo 远程调用
    rpc  GetProgrammerInfo (Request) returns (Response) {}
}


/*
  生成go文件的方式是： 在根目录，也就是这的\goRPCTest\grpctest下：
   protoc -I . --go_out=plugins=grpc,paths=source_relative:. ./proto/ppp.proto 

*/